#include <stdio.h>
#include "driver/gpio.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/semphr.h"
#include "portmacro.h"
#include "sdkconfig.h"

#define led3 26
#define led4 33

#define high 1
#define low 0
/*
In FreeRTOS the higher the number in priority will be executed first

*/
 
// semaphore NULL
SemaphoreHandle_t xSemaphore = NULL;
SemaphoreHandle_t xSemaphore2 = NULL; 

// Task 1 
void task1(void *pvParameters)
{
    while(1)
    {
		
        vTaskDelay(2000 / portTICK_PERIOD_MS); // 2 second delay
        printf("Task 1\n");
        xSemaphoreGive(xSemaphore); 
    }
}
 
// Task 2 
void task2(void *pvParameters)
{
    while(1)
    {
		
        vTaskDelay(1000 / portTICK_PERIOD_MS); // 2 second delay
        printf("Task 2\n");
        xSemaphoreGive(xSemaphore); 
    }
}
// Task 3 
void task3(void *pvParameters)
{
    while(1)
    {
		if(xSemaphoreTake(xSemaphore, portMAX_DELAY)==pdTRUE)
		{
		  
		   printf("Task 3\n");
		    xSemaphoreGive(xSemaphore2);
           gpio_set_level(led3, high);
           vTaskDelay(100 / portTICK_PERIOD_MS); // 1 second delay
           gpio_set_level(led3, low);
           vTaskDelay(100 / portTICK_PERIOD_MS); // 1 second delay		
		}
    }
}
 
// Task 4 
void task4(void *pvParameters)
{
    while(1)
    {
	  if(xSemaphoreTake(xSemaphore2, portMAX_DELAY)==pdTRUE)
		{
		   printf("Task 4\n");
           gpio_set_level(led4, high);
           vTaskDelay(100 / portTICK_PERIOD_MS); // 1 second delay
           gpio_set_level(led4, low);
           vTaskDelay(100 / portTICK_PERIOD_MS); // 1 second delay		
		}
    }
} 
 
void app_main()
{
	gpio_set_direction(led3, GPIO_MODE_OUTPUT);
	gpio_set_direction(led4, GPIO_MODE_OUTPUT);
	
        gpio_set_level(led3, 0);
        gpio_set_level(led4, 0);
	
    // semaphores
    xSemaphore = xSemaphoreCreateBinary();
    xSemaphore2 = xSemaphoreCreateBinary();
 
    // Create Tasks
    xTaskCreate(&task1, "task1", 4096, NULL, 5, NULL);
    xTaskCreate(&task2, "task2", 4096, NULL,5, NULL);
    xTaskCreate(&task3, "task3", 4096, NULL, 6, NULL);
    xTaskCreate(&task4, "task4", 4096, NULL, 7, NULL); //task 4 should be top priority
}
/*
Task 4 should have top priority because it depends on task3 which depends on task2 and task1, keep LED delays to 100ms so you dont skip task prints
xSemaphore are to link tasks with others just icase you want seperate groups you can create multiple xSemaphores.


*/
